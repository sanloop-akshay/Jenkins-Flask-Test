name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: akshaypranavb/ci-cd-pipeline-flask
  SONAR_PROJECT_KEY: ci-cd-pipeline-flask
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies and run tests
        run: |
          echo "Setting up virtual environment..."
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          echo "Running tests..."
          pytest tests/

      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub with retry
        run: |
          for i in {1..3}; do
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin && break
            echo "Docker login failed. Retrying in 5 seconds..."
            sleep 5
          done

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:latest .

      - name: Push Docker image
        run: docker push $IMAGE_NAME:latest

      - name: Deploy to Azure VM
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.AZURE_VM_PEM }} azureuser@${{ secrets.AZURE_VM_IP }} "
            IMAGE_NAME=${IMAGE_NAME}
            docker pull \$IMAGE_NAME:latest &&
            docker stop flask_app || true &&
            docker rm flask_app || true &&
            docker run -d --name flask_app -p 8000:5000 \$IMAGE_NAME:latest
          "
